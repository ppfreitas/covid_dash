labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
ggplot(results, aes(d, dist_c, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution c",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
results <- data.frame()
for (n in c(1000,2000,3000,5000)){
for (d in c(2,4,6,8,10,12,15,20,100,200,500)){
df <- gen.x(n,d)
training <- floor(0.7*n)
results <- rbind(results, run_model1(df,training))
#results <- rbind(results, run_model2(df,training))
#results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
theme_fivethirtyeight()+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()
results <- data.frame()
for (n in c(1000,2000,3000,5000)){
for (d in c(2,4,6,8,10,12,15,20,50)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
results <- data.frame()
for (n in c(100,200,300,500)){
for (d in c(2,4,6,8,10,12,15,20)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
theme_fivethirtyeight()+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
results <- data.frame()
for (n in c(100,200,300,500)){
for (d in c(2,4,6,8,10,12,15,20)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
results <- data.frame()
for (n in c(100,200,300,500)){
for (d in c(2,4,6,8,10,12,15,20)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
results <- data.frame()
for (n in c(100,200,300,500)){
for (d in c(10,12,15,20,30,40)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
theme_fivethirtyeight()+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
ggplot(results, aes(d, log(dist_c), color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution c",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
results <- data.frame()
for (n in c(100,200,300,500)){
for (d in c(25,35,45,55)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
results <- data.frame()
for (n in c(100,1000,2000,3000)){
for (d in c(3,5,7,10,15)){
df <- gen.x(n,d)
training <- floor(0.7*n)
#results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
theme_fivethirtyeight()+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, log(dist_c), color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution c",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, dist_c, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution c",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
results <- data.frame()
for (n in c(100,1000,2000,3000)){
for (d in c(3,5,7,10,15)){
df <- gen.x(n,d)
training <- floor(0.7*n)
results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
theme_fivethirtyeight()+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, dist_c, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution c",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
results <- data.frame()
for (n in c(1000,2000,3000,5000)){
for (d in c(3,5,7,10,15)){
df <- gen.x(n,d)
training <- floor(0.7*n)
results <- rbind(results, run_model1(df,training))
results <- rbind(results, run_model2(df,training))
results <- rbind(results, run_model3(df,training))
}
}
results
ggplot(results, aes(d, dist_a, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
theme_fivethirtyeight()+
labs(title = "Regression MSE for distribution a",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, dist_b, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution b",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
ggplot(results, aes(d, dist_c, color = as.factor(model))) +
geom_point()+
geom_line()+
facet_wrap(~n)+
labs(title = "Regression MSE for distribution c",
subtitle = "Each plot is for a different number of samples",
x = "Dimension",
y = "Mean squared error",
color = "model")+
scale_color_fivethirtyeight() +
theme_fivethirtyeight()+
theme(axis.title = element_text())
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(tidyverse)
library(shiny)
df <- read.csv(
"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
View(df)
View(df)
runApp('Documentos/data_science/corona/covid_dash')
install.packages("DT")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(tidyverse)
library(shiny)
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
?renderPlot
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
runApp('Documentos/data_science/corona/covid_dash')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='ppfreitas',
token='38F992D332309E4F3F8C13B437A94295',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ppfreitas',
token='38F992D332309E4F3F8C13B437A94295',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ppfreitas',
token='38F992D332309E4F3F8C13B437A94295',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ppfreitas',
token='38F992D332309E4F3F8C13B437A94295',
secret='qetJx1Fw/ZGgvCv6SVOScaXme09FoDcM6FqdGnUS')
setwd("~/Documentos/data_science/corona/covid_dash")
library(rsconnect)
rsconnect::deployApp('app.R')
setwd("~/Documentos/data_science/corona")
library(rsconnect)
rsconnect::deployApp('~/Documentos/data_science/corona/covid_dash')
?gather
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(dplyr)
?gather
library(rsconnect)
rsconnect::deployApp('~/Documentos/data_science/corona/covid_dash')
shiny::runApp('covid_dash')
runApp('covid_dash')
runApp('covid_dash')
runApp('covid_dash')
runApp('covid_dash')
library(rsconnect)
rsconnect::deployApp('~/Documentos/data_science/corona/covid_dash')
runApp('covid_dash')
